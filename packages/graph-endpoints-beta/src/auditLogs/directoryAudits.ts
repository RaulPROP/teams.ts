import type { EndpointRequest, Operation } from './../types/common.ts';

export interface IEndpoints {
  'DELETE /auditLogs/directoryAudits/{directoryAudit-id}': Operation<
    '/auditLogs/directoryAudits/{directoryAudit-id}',
    'delete'
  >;
  'GET /auditLogs/directoryAudits': Operation<'/auditLogs/directoryAudits', 'get'>;
  'GET /auditLogs/directoryAudits/{directoryAudit-id}': Operation<
    '/auditLogs/directoryAudits/{directoryAudit-id}',
    'get'
  >;
  'PATCH /auditLogs/directoryAudits/{directoryAudit-id}': Operation<
    '/auditLogs/directoryAudits/{directoryAudit-id}',
    'patch'
  >;
  'POST /auditLogs/directoryAudits': Operation<'/auditLogs/directoryAudits', 'post'>;
}

/**
 * `DELETE /auditLogs/directoryAudits/{directoryAudit-id}`
 *
 */
export function del(
  params?: IEndpoints['DELETE /auditLogs/directoryAudits/{directoryAudit-id}']['parameters']
): EndpointRequest<
  IEndpoints['DELETE /auditLogs/directoryAudits/{directoryAudit-id}']['response']
> {
  return {
    ver: 'beta',
    method: 'delete',
    path: '/auditLogs/directoryAudits/{directoryAudit-id}',
    paramDefs: [
      { name: 'If-Match', in: 'header' },
      { name: 'directoryAudit-id', in: 'path' },
    ],
    params,
  };
}

/**
 * `GET /auditLogs/directoryAudits`
 *
 * Get the list of audit logs generated by Microsoft Entra ID. This includes audit logs generated by various services within Microsoft Entra ID, including user, app, device and group Management, privileged identity management (PIM), access reviews, terms of use, identity protection, password management (SSPR and admin password resets), and self service group management.
 */
export function list(
  params?: IEndpoints['GET /auditLogs/directoryAudits']['parameters']
): EndpointRequest<IEndpoints['GET /auditLogs/directoryAudits']['response']> {
  return {
    ver: 'beta',
    method: 'get',
    path: '/auditLogs/directoryAudits',
    paramDefs: [
      { name: '$top', in: 'query' },
      { name: '$skip', in: 'query' },
      { name: '$search', in: 'query' },
      { name: '$filter', in: 'query' },
      { name: '$count', in: 'query' },
      { name: '$orderby', in: 'query' },
      { name: '$select', in: 'query' },
      { name: '$expand', in: 'query' },
    ],
    params,
  };
}

/**
 * `GET /auditLogs/directoryAudits/{directoryAudit-id}`
 *
 * Get a specific Microsoft Entra audit log item. This includes an audit log item generated by various services within Microsoft Entra ID like user, application, device and group management, privileged identity management (PIM), access reviews, terms of use, identity protection, password management (self-service and admin password resets), self-service group management, and so on.
 */
export function get(
  params?: IEndpoints['GET /auditLogs/directoryAudits/{directoryAudit-id}']['parameters']
): EndpointRequest<IEndpoints['GET /auditLogs/directoryAudits/{directoryAudit-id}']['response']> {
  return {
    ver: 'beta',
    method: 'get',
    path: '/auditLogs/directoryAudits/{directoryAudit-id}',
    paramDefs: [
      { name: '$select', in: 'query' },
      { name: '$expand', in: 'query' },
      { name: 'directoryAudit-id', in: 'path' },
    ],
    params,
  };
}

/**
 * `PATCH /auditLogs/directoryAudits/{directoryAudit-id}`
 *
 */
export function update(
  body: IEndpoints['PATCH /auditLogs/directoryAudits/{directoryAudit-id}']['body'],
  params?: IEndpoints['PATCH /auditLogs/directoryAudits/{directoryAudit-id}']['parameters']
): EndpointRequest<IEndpoints['PATCH /auditLogs/directoryAudits/{directoryAudit-id}']['response']> {
  return {
    ver: 'beta',
    method: 'patch',
    path: '/auditLogs/directoryAudits/{directoryAudit-id}',
    paramDefs: [{ name: 'directoryAudit-id', in: 'path' }],
    params,
    body,
  };
}

/**
 * `POST /auditLogs/directoryAudits`
 *
 */
export function create(
  body: IEndpoints['POST /auditLogs/directoryAudits']['body'],
  params?: IEndpoints['POST /auditLogs/directoryAudits']['parameters']
): EndpointRequest<IEndpoints['POST /auditLogs/directoryAudits']['response']> {
  return {
    ver: 'beta',
    method: 'post',
    path: '/auditLogs/directoryAudits',
    paramDefs: [],
    params,
    body,
  };
}
